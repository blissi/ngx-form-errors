{"version":3,"sources":["../../../../../../../../src/demo/app/showcase/containers/advanced-form/defult-scoped-and-local-templates/defult-scoped-and-local-templates.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAA,EAAU,MAAO,eAAA,CAAgB;AAC1C,OAAO,EAAE,WAAA,EAAwB,UAAA,EAA4B,MAAO,gBAAA,CAAiB;AACrF,OAAO,EAAE,gBAAA,EAAkB,kCAAA,EAAmC,MAAO,iBAAA,CAAkB;AAEvF,OAAO,KAAK,UAAA,MAAgB,qBAAA,CAAsB;AAElD,IAAM,WAAA,GAAc,UAAA,WAAA,IAAe,OAAA,WAAA,CAAY,KAAC,CAAK;IACnD,QAAQ,EAAE,CAAA,EAAU,EAAG;YACrB,UAAU,CAAC,QAAC;YACZ,UAAU,CAAC,iBAAC;YACZ,UAAA,CAAC,IAAI,OAAA,CAAA,EAAG,WAAA,EAAa,IAAA,EAAK,CAAE,EAAvB,CAAuB;YAC5B,UAAA,CAAC,IAAI,OAAA,CAAA,EAAG,WAAA,EAAa,IAAA,EAAK,CAAE,EAAvB,CAAuB;YAC5B,UAAA,CAAC,IAAI,OAAA,CAAA,EAAG,WAAA,EAAa,IAAA,EAAK,CAAE,EAAvB,CAAuB;YAC5B,UAAA,CAAC,IAAI,OAAA,CAAA,EAAG,WAAA,EAAa,IAAA,EAAK,CAAE,EAAvB,CAAuB;SAC7B,CAAC;CACH,CAAC,EATiC,CASjC,CAAC;AAQH;IAIE,gDAAoB,WAAwB,EAAE,gBAAkC;QAA5D,gBAAW,GAAX,WAAW,CAAa;QAC1C,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE3C,gBAAgB,CAAC,iBAAiB,CAAC,UAAU,EAAE,4BAA4B,CAAC,CAAC;QAC7E,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;QACxE,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;QACxE,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;QACxE,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;IAE1E,CAAC;IAdU,sCAAsC;QANlD,SAAS,CAAC;YACT,QAAQ,EAAE,oCAAoC;YAC9C,WAAW,EAAE,kDAAkD;YAC/D,gFAAgF;YAChF,SAAS,EAAE,kCAAkC;SAC9C,CAAC;yCAKiC,WAAW,EAAoB,gBAAgB;OAJrE,sCAAsC,CAgBlD;IAAD,6CAAC;CAhBD,AAgBC,IAAA;SAhBY,sCAAsC","file":"defult-scoped-and-local-templates.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { NgxErrorsService, NGX_ERRORS_SERVICE_CHILD_PROVIDERS } from 'ngx-form-errors';\n\nimport * as validators from '../../../validators';\n\nconst createGroup = formBuilder => formBuilder.group({\n  password:         ['', [\n    Validators.required,\n    validators.passwordValidator,\n    c => ({ alwaysFail1: true }),\n    c => ({ alwaysFail2: true }),\n    c => ({ alwaysFail3: true }),\n    c => ({ alwaysFail4: true })\n  ]],\n});\n\n@Component({\n  selector: 'default-scoped-and-local-templates',\n  templateUrl: 'defult-scoped-and-local-templates.component.html',\n  // create a new instance of NgxErrorsService based on a parent NgxErrorsService.\n  providers: NGX_ERRORS_SERVICE_CHILD_PROVIDERS\n})\nexport class DefaultScopedAndLocalTempalteComponent {\n  form1: FormGroup;\n  form2: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, ngxErrorsService: NgxErrorsService) {\n    this.form1 = createGroup(this.formBuilder);\n    this.form2 = createGroup(this.formBuilder);\n\n    ngxErrorsService.setDefaultMessage('required', 'ALTERNATE REQUIRED MESSAGE');\n    ngxErrorsService.setDefaultMessage('alwaysFail1', 'Constant Error # 1');\n    ngxErrorsService.setDefaultMessage('alwaysFail2', 'Constant Error # 2');\n    ngxErrorsService.setDefaultMessage('alwaysFail3', 'Constant Error # 3');\n    ngxErrorsService.setDefaultMessage('alwaysFail4', 'Constant Error # 4');\n\n  }\n\n}\n"]}
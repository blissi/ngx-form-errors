{"version":3,"sources":["../../../../src/ngx-form-errors/src/ngx-error-defaults.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,QAAQ,EACR,WAAW,GACZ,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,gBAAA,EAAkC,MAAO,gBAAA,CAAiB;AAGnE,OAAO,EAAE,gBAAA,EAAiB,MAAO,sBAAA,CAAuB;AAKxD;IAQE,iCAAmB,QAAuC,EACtC,gBAAkC,EACtB,OAA0B;QAFvC,aAAQ,GAAR,QAAQ,CAA+B;QACtC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACtB,YAAO,GAAP,OAAO,CAAmB;QACxD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,gBAAgB,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,6CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1D,CAAC;IACH,CAAC;IAtByC;QAAzC,KAAK,CAAC,iCAAiC,CAAC;;6DAA2C;IAE1C;QAAzC,KAAK,CAAC,iCAAiC,CAAC;;6DAAkB;IAEpB;QAAtC,KAAK,CAAC,8BAA8B,CAAC;;0DAAiB;IAN5C,uBAAuB;QAHnC,SAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;SACtC,CAAC;QAWa,WAAA,QAAQ,EAAE,CAAA;yCAFM,WAAW;YACF,gBAAgB;YACZ,gBAAgB;OAV/C,uBAAuB,CAyBnC;IAAD,8BAAC;CAzBD,AAyBC,IAAA;SAzBY,uBAAuB;AA8BpC;IAKE,sCAAmB,QAAuC;QAAvC,aAAQ,GAAR,QAAQ,CAA+B;IAAI,CAAC;IAJhB;QAA9C,KAAK,CAAC,sCAAsC,CAAC;;kEAA2C;IAC1C;QAA9C,KAAK,CAAC,sCAAsC,CAAC;;kEAAkB;IACpB;QAA3C,KAAK,CAAC,mCAAmC,CAAC;;+DAAiB;IAHjD,4BAA4B;QAHxC,SAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;SAC3C,CAAC;yCAM6B,WAAW;OAL7B,4BAA4B,CAMxC;IAAD,mCAAC;CAND,AAMC,IAAA;SANY,4BAA4B;AAWzC;IAIE,0BAAmB,WAA0C;QAA1C,gBAAW,GAAX,WAAW,CAA+B;IAAI,CAAC;IAFvC;QAA1B,KAAK,CAAC,kBAAkB,CAAC;;kDAAc;IAF7B,gBAAgB;QAH5B,SAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;SAC/B,CAAC;yCAKgC,WAAW;OAJhC,gBAAgB,CAM5B;IAAD,uBAAC;CAND,AAMC,IAAA;SANY,gBAAgB","file":"ngx-error-defaults.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Input,\n  OnDestroy,\n  Optional,\n  TemplateRef,\n} from '@angular/core';\nimport { ControlContainer, AbstractControl } from '@angular/forms';\n\nimport { NgxDisplayContext, NgxErrorsContext } from './models';\nimport { NgxErrorsService } from './ngx-errors.service';\n\n@Directive({\n  selector: '[ngxErrorDefaultTemplate]'\n})\nexport class NgxErrorDefaultTemplate implements NgxDisplayContext, OnDestroy {\n\n  @Input('ngxErrorDefaultTemplateRenderIf') renderIf: (c: AbstractControl) => boolean;\n\n  @Input('ngxErrorDefaultTemplateMaxError') maxError: number;\n\n  @Input('ngxErrorDefaultTemplateOrder') order: string[];\n\n  constructor(public template: TemplateRef<NgxErrorsContext>,\n              private ngxErrorsService: NgxErrorsService,\n              @Optional() private control?: ControlContainer) {\n    if (!control) {\n      ngxErrorsService.defaultScope = this;\n    } else {\n      ngxErrorsService.setScoped(control, this);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.control) {\n      this.ngxErrorsService.removeScoped(this.control);\n    } else if (this.ngxErrorsService.defaultScope.template === this.template) {\n      this.ngxErrorsService.defaultScope.template = undefined;\n    }\n  }\n}\n\n@Directive({\n  selector: '[ngxErrorDefaultLocalTemplate]'\n})\nexport class NgxErrorDefaultLocalTemplate implements NgxDisplayContext {\n  @Input('ngxErrorDefaultLocalTemplateRenderIf') renderIf: (c: AbstractControl) => boolean;\n  @Input('ngxErrorDefaultLocalTemplateMaxError') maxError: number;\n  @Input('ngxErrorDefaultLocalTemplateOrder') order: string[];\n\n  constructor(public template: TemplateRef<NgxErrorsContext>) { }\n}\n\n@Directive({\n  selector: '[ngxErrorOverride]'\n})\nexport class NgxErrorOverride {\n\n  @Input('ngxErrorOverride') name: string;\n\n  constructor(public templateRef: TemplateRef<NgxErrorsContext>) { }\n\n}"]}